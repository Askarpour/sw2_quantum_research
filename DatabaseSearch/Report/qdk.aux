\relax 
\providecommand\hyper@newdestlabel[2]{}
\citation{larose2019overview}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Microsoft Quantum Development Kit}{10}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chp:qdk}{{2}{10}{Microsoft Quantum Development Kit}{chapter.2}{}}
\newlabel{chp:qdk@cref}{{[chapter][2][]2}{[1][10][]10}}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Software overview}{11}{section.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.1}Installation}{11}{subsection.2.1.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.2}Documentation}{11}{subsection.2.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.3}Language Q\#}{11}{subsection.2.1.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.4}Simulator}{12}{subsection.2.1.4}}
\citation{Grover:1996:FQM:237814.237866}
\@writefile{toc}{\contentsline {subsubsection}{Hardware and noise analysis}{13}{section*.3}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Sample Q\# code: Grover Search}{13}{section.2.2}}
\newlabel{sec:QSgrover}{{2.2}{13}{Sample Q\# code: Grover Search}{section.2.2}{}}
\newlabel{sec:QSgrover@cref}{{[section][2][2]2.2}{[1][13][]13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}The code}{14}{subsection.2.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}Results of multiple runs of the code}{16}{subsection.2.2.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.3}Possible improvements on this implementation}{16}{subsection.2.2.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces Classical search on a database. The search complexity is $O(N)$, in fact the probability of picking a the correct element by random choice is $1/N$. In this example the database contains 1024 elements, we look for element 13 and we perform 10 thousands attempts.\relax }}{17}{figure.caption.4}}
\newlabel{fig:db_stats1}{{2.1}{17}{Classical search on a database. The search complexity is $O(N)$, in fact the probability of picking a the correct element by random choice is $1/N$. In this example the database contains 1024 elements, we look for element 13 and we perform 10 thousands attempts.\relax }{figure.caption.4}{}}
\newlabel{fig:db_stats1@cref}{{[figure][1][2]2.1}{[1][16][]17}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces Quantum search on a database. The search complexity is $O(sqrt{N})$. The quantum success probability is predicted to be higher than the classical one, and the statistics confirm the theory as computed during the attemprs. In this example the database contains 1024 elements, we look for element 13 and we perform 1 thousand attempts (less than classical ones because the simulation of Oracle queries carries some overhead).\relax }}{18}{figure.caption.5}}
\newlabel{fig:db_stats2}{{2.2}{18}{Quantum search on a database. The search complexity is $O(sqrt{N})$. The quantum success probability is predicted to be higher than the classical one, and the statistics confirm the theory as computed during the attemprs. In this example the database contains 1024 elements, we look for element 13 and we perform 1 thousand attempts (less than classical ones because the simulation of Oracle queries carries some overhead).\relax }{figure.caption.5}{}}
\newlabel{fig:db_stats2@cref}{{[figure][2][2]2.2}{[1][16][]18}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.3}{\ignorespaces Again quantum search on a database. The database contains 1024 elements, but this time we look for 4 different elements at the same time. As the simulation gets proportionally heavier, this time we perform 1/4 of the previous attempts, bt enough to confirm the matching between the theoretical success probability and the simulated one.\relax }}{19}{figure.caption.6}}
\newlabel{fig:db_stats3}{{2.3}{19}{Again quantum search on a database. The database contains 1024 elements, but this time we look for 4 different elements at the same time. As the simulation gets proportionally heavier, this time we perform 1/4 of the previous attempts, bt enough to confirm the matching between the theoretical success probability and the simulated one.\relax }{figure.caption.6}{}}
\newlabel{fig:db_stats3@cref}{{[figure][3][2]2.3}{[1][16][]19}}
\@setckpt{qdk}{
\setcounter{page}{20}
\setcounter{equation}{0}
\setcounter{enumi}{0}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{0}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{2}
\setcounter{section}{2}
\setcounter{subsection}{3}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{3}
\setcounter{table}{0}
\setcounter{ContinuedFloat}{0}
\setcounter{subfigure}{0}
\setcounter{subtable}{0}
\setcounter{@pps}{0}
\setcounter{@ppsavesec}{0}
\setcounter{@ppsaveapp}{0}
\setcounter{lstnumber}{36}
\setcounter{parentequation}{0}
\setcounter{Item}{0}
\setcounter{Hfootnote}{0}
\setcounter{bookmark@seq@number}{18}
\setcounter{lstlisting}{0}
\setcounter{section@level}{2}
}
